PROCEDURE "osr.scv.foundation.db.Procedures::SP_SCVRecordHash" ( )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA 
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   	
	lt_scvrms_hash =  SELECT 
		            	DISTINCT a.SCV_ID,
		            --	PERSON_RMS, ADDR_RMS, TEL_RMS,FAX_RMS,
		            	HASH_SHA256(TO_BINARY(TO_VARCHAR(CASE WHEN PERSON_RMS IS NULL THEN '' ELSE PERSON_RMS END)),
									TO_BINARY(TO_VARCHAR(CASE WHEN ADDR_RMS IS NULL THEN '' ELSE ADDR_RMS END)),
									TO_BINARY(TO_VARCHAR(CASE WHEN TEL_RMS IS NULL THEN '' ELSE TEL_RMS END)),
									TO_BINARY(TO_VARCHAR(CASE WHEN FAX_RMS IS NULL THEN '' ELSE FAX_RMS END))
						) AS HASH_SCV

						
		                FROM  "osr.scv.foundation.db.data::SCVFoundation.Master" AS a
		                --RMS Name
		                LEFT OUTER JOIN (
		                				SELECT SCV_ID, FIRST_NAME, MIDDLE_NAME, LAST_NAME, BIRTH_DATE, DEATH_DATE, SOURCE_ID, 
		                				--(FIRST_NAME || MIDDLE_NAME || LAST_NAME || TO_VARCHAR (TO_DATE(BIRTH_DATE), 'YYYY-MM-DD') || DEATH_DATE) as PERSON_RMS,
		                				(FIRST_NAME || MIDDLE_NAME || LAST_NAME || BIRTH_DATE|| SOURCE_ID || INACTIVE ) as PERSON_RMS
		                				--HASH_SHA256(TO_BINARY(TO_VARCHAR(FIRST_NAME)), TO_BINARY(TO_VARCHAR(MIDDLE_NAME)), TO_BINARY(TO_VARCHAR(LAST_NAME)), TO_BINARY(TO_VARCHAR(BIRTH_DATE)), TO_BINARY(TO_VARCHAR(DEATH_DATE)), TO_BINARY(TO_VARCHAR(SOURCE_ID)), TO_BINARY(TO_VARCHAR(INACTIVE))) as CHECKSUM_PERSON_RMS
		                				FROM "osr.scv.foundation.db.data::SCVFoundation.PersonRms"
		                ) as pr
		                ON a.SCV_ID = pr.SCV_ID
		                --RMS Address
		                LEFT OUTER JOIN(
		                				SELECT SCV_ID, CITY1, POST_CODE1, STREET, HOUSE_NUM1, COUNTRY, REGION, PERS_ADDR, MC_CITY1, MC_STREET, TIME_ZONE, ADRC_UUID, SOURCE_ID,
		                				(CITY1 || POST_CODE1 || STREET || HOUSE_NUM1 || COUNTRY || REGION || PERS_ADDR || MC_CITY1 || MC_STREET || TIME_ZONE || ADRC_UUID) as ADDR_RMS
		                				FROM "osr.scv.foundation.db.data::SCVFoundation.AddressRms"
		                ) as ar
		                 ON pr.SCV_ID = ar.SCV_ID AND pr.SOURCE_ID = ar.SOURCE_ID
		                --RMS Tel Phone
		                LEFT OUTER JOIN(
		                				SELECT SCV_ID, CONTACT_NUMBER AS NUMBER_RMS, NUMBER_EXT, NUMBER_TYPE, SOURCE, 
		                				(CONTACT_NUMBER || NUMBER_EXT) as TEL_RMS
		                				FROM "osr.scv.foundation.db.data::SCVFoundation.ContactNumber"
		        	     				WHERE SOURCE = 'RMS' and NUMBER_TYPE = 'PHO'
		                ) as telr
		                 ON ar.SCV_ID = telr.SCV_ID
		                 --RMS Fax Phone
		                 LEFT OUTER JOIN(
		                				SELECT SCV_ID, CONTACT_NUMBER AS FAX_RMS_NUM, NUMBER_EXT, NUMBER_TYPE, SOURCE	,
		                				(CONTACT_NUMBER || NUMBER_EXT) as FAX_RMS
		                				FROM "osr.scv.foundation.db.data::SCVFoundation.ContactNumber"
		        	     				WHERE SOURCE = 'RMS' and NUMBER_TYPE = 'FAX'
		                ) as faxr
		                 ON ar.SCV_ID = faxr.SCV_ID
		                ;
		                
-- Person RMS Hash without the xdele field	

	lt_scvtmr_hash = SELECT 
		            	a.SCV_ID,
		            --	PERSON_TMR, ADDR_TMR, TEL_TMR, SMS_TMR, EMAIL_TMR,
						HASH_SHA256(
									TO_BINARY(TO_VARCHAR(CASE WHEN PERSON_TMR IS NULL THEN '' ELSE PERSON_TMR END)),
									TO_BINARY(TO_VARCHAR(CASE WHEN ADDR_TMR IS NULL THEN '' ELSE ADDR_TMR END)),
									TO_BINARY(TO_VARCHAR(CASE WHEN TEL_TMR IS NULL THEN '' ELSE TEL_TMR END)),
									TO_BINARY(TO_VARCHAR(CASE WHEN SMS_TMR IS NULL THEN '' ELSE SMS_TMR END)),
									TO_BINARY(TO_VARCHAR(CASE WHEN EMAIL_TMR IS NULL THEN '' ELSE EMAIL_TMR END))
						) AS HASH_SCV
		                FROM  "osr.scv.foundation.db.data::SCVFoundation.Master" AS a
						LEFT OUTER JOIN (
		                				SELECT SCV_ID, FIRST_NAME, MIDDLE_NAME, LAST_NAME, BIRTH_DATE, DEATH_DATE,
		                				(FIRST_NAME || MIDDLE_NAME || LAST_NAME || BIRTH_DATE) as PERSON_TMR
		                				FROM "osr.scv.foundation.db.data::SCVFoundation.PersonTmr"
		                ) as ptmr
		                ON a.SCV_ID = ptmr.SCV_ID
		   --TMR Address
		                LEFT OUTER JOIN(
		                				SELECT SCV_ID, FLOOR, UNIT, BUILDING_NAME, STREET_NO, STREET_NAME, STREET_TYPE, STREET_SUFFIX, SUBURB, POSTCODE, STATE, COUNTRY,
		                				(FLOOR || UNIT || BUILDING_NAME || STREET_NO || STREET_NAME || STREET_TYPE || STREET_SUFFIX || SUBURB || POSTCODE || STATE || COUNTRY) as ADDR_TMR
		                				FROM "osr.scv.foundation.db.data::SCVFoundation.AddressTmr"
		                ) as atmr
		                 ON ptmr.SCV_ID = atmr.SCV_ID
		   --TMR Tel Phone
		                LEFT OUTER JOIN(
		                				SELECT SCV_ID, CONTACT_NUMBER AS NUMBER_TMR, NUMBER_EXT, NUMBER_TYPE, VALID_FROM, SOURCE,
		                				(LAST_UPDATED || CONTACT_NUMBER) as TEL_TMR
		                				FROM "osr.scv.foundation.db.data::SCVFoundation.ContactNumber"
		        	     				WHERE SOURCE = 'TMR' and NUMBER_TYPE = 'PHO'
		                ) as teltmr
		                 ON ptmr.SCV_ID = teltmr.SCV_ID
		    --TMR SMS Phone
		                 LEFT OUTER JOIN(
		                				SELECT SCV_ID, CONTACT_NUMBER AS SMS_TMR_NUM, NUMBER_EXT, NUMBER_TYPE, VALID_FROM SOURCE,
		                				(LAST_UPDATED || CONTACT_NUMBER) as SMS_TMR
		                				FROM "osr.scv.foundation.db.data::SCVFoundation.ContactNumber"
		        	     				WHERE SOURCE = 'TMR' and NUMBER_TYPE = 'SMS'
		                ) as smstmr
		                 ON ptmr.SCV_ID = smstmr.SCV_ID
		    --TMR Email
		                 LEFT OUTER JOIN(
		                				SELECT SCV_ID, VALID_TO, CONTACT_EMAIL, SOURCE,
		                				(LAST_UPDATED || CONTACT_EMAIL) as EMAIL_TMR
		                				FROM "osr.scv.foundation.db.data::SCVFoundation.ContactEmail"
		        	     				WHERE SOURCE = 'TMR' 
		                ) as em
		                 ON ptmr.SCV_ID = em.SCV_ID
		                
		                ;
	
	lt_scvall_hash = SELECT * FROM :lt_scvrms_hash
						UNION ALL
					 SELECT * FROM :lt_scvtmr_hash;
					 
	INSERT INTO "osr.scv.foundation.db.data::HashResults.SCVRecordHash"	(SELECT * FROM :lt_scvall_hash);							 
					 
					 
	lt_scvrms_RMSPerson_hash =  SELECT 
			            	DISTINCT a.SCV_ID,
			            	HASH_SHA256(TO_BINARY(TO_VARCHAR(CASE WHEN PERSON_RMS IS NULL THEN '' ELSE PERSON_RMS END))
							) AS HASH_SCV
			                FROM  "osr.scv.foundation.db.data::SCVFoundation.Master" AS a
			                --RMS Name
			                LEFT OUTER JOIN (
			                				SELECT SCV_ID, FIRST_NAME, MIDDLE_NAME, LAST_NAME, BIRTH_DATE, DEATH_DATE, SOURCE_ID, 
			                				--(FIRST_NAME || MIDDLE_NAME || LAST_NAME || BIRTH_DATE || SOURCE_ID) as PERSON_RMS
			                				( BIRTH_DATE || SOURCE_ID) as PERSON_RMS
			                			--	HASH_SHA256(TO_BINARY(TO_VARCHAR(FIRST_NAME)), TO_BINARY(TO_VARCHAR(MIDDLE_NAME)), TO_BINARY(TO_VARCHAR(LAST_NAME)), TO_BINARY(TO_VARCHAR(BIRTH_DATE)), TO_BINARY(TO_VARCHAR(DEATH_DATE)), TO_BINARY(TO_VARCHAR(SOURCE_ID))) as CHECKSUM_PERSON_RMS
			                				FROM "osr.scv.foundation.db.data::SCVFoundation.PersonRms"
			                ) as pr
			                ON a.SCV_ID = pr.SCV_ID;	
	
	INSERT INTO "osr.scv.foundation.db.data::HashResults.SCVRecordHashRMS"	(SELECT * FROM :lt_scvrms_RMSPerson_hash);		                
   
END;