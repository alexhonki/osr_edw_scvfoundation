PROCEDURE "osr.scv.foundation.db.Procedures::SP_DetectScvRecords" ( 

	--	OUT o_return_code	NVARCHAR(10),
	--	OUT o_message		NVARCHAR(500)
	)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA 
   AS

BEGIN	
	-- Declare exception hander for all SQL exceptions. 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		
	-- o_message:=  'ERROR: ' || ::SQL_ERROR_CODE || ' ' || ::SQL_ERROR_MESSAGE;
	-- o_return_code :=  'ERROR';
	END;
	
	lt_existing_records = SELECT mh.ENTITY_ID, mh.MATCH_ROW_ID, sh.SCV_ID AS SCV_ID, 'Existing' AS ACTION  FROM "osr.scv.foundation.db.data::HashResults.MatchResultsHash" as mh
		INNER JOIN (
					SELECT SCV_ID, "HASH"  FROM "osr.scv.foundation.db.data::HashResults.SCVRecordHash"
					) as sh
		ON mh."HASH" = sh."HASH";

	-- Person RMS Hash without the xdele field	
	lt_exisitng_RMSPerson_records = SELECT mh.ENTITY_ID, mh.MATCH_ROW_ID, sh.SCV_ID AS SCV_ID, 'Existing' AS ACTION  FROM "osr.scv.foundation.db.data::HashResults.MatchResultsHashRMS" as mh
		INNER JOIN (
					SELECT SCV_ID, "HASH"  FROM "osr.scv.foundation.db.data::HashResults.SCVRecordHashRMS"
					) as sh
		ON mh."HASH" = sh."HASH";

    lt_add_new_records = SELECT mh.ENTITY_ID, mh.MATCH_ROW_ID, 0 AS SCV_ID , 'Add' AS ACTION 
						FROM   "osr.scv.foundation.db.data::HashResults.MatchResultsHash" as mh
						WHERE NOT EXISTS (SELECT SCV_ID, "HASH"  FROM "osr.scv.foundation.db.data::HashResults.SCVRecordHash" as sh
                						WHERE mh."HASH" = sh."HASH");            						

	lt_total_records = ( SELECT MATCH_ROW_ID, SCV_ID, ACTION  FROM :lt_existing_records
							UNION ALL
						SELECT MATCH_ROW_ID, SCV_ID, ACTION  FROM :lt_add_new_records);
						
						
	INSERT INTO "osr.scv.foundation.db.data::MatchResults.MatchDelta" ( SELECT f.MATCH_ROW_ID, g.SCV_ID, f.ACTION, 'Add' FROM (
																		SELECT b.ENTITY_ID, MATCH_ROW_ID, SCV_ID, a.ACTION FROM :lt_total_records as a
																		INNER JOIN "osr.scv.foundation.db.data::MatchResults.MatchResults" as b
																		ON a.MATCH_ROW_ID = b."Match_ROW_ID"
																		)f
																		LEFT OUTER JOIN (
																						SELECT e.ENTITY_ID, MAX (c.SCV_ID) AS SCV_ID FROM :lt_total_records as c
																						INNER JOIN "osr.scv.foundation.db.data::MatchResults.MatchResults" as e
																						ON c.MATCH_ROW_ID = e."Match_ROW_ID"
																						GROUP BY e.ENTITY_ID
																		)g
																		ON f.ENTITY_ID = g.ENTITY_ID);
	
																		
	UPDATE "osr.scv.foundation.db.data::MatchResults.MatchDelta" a SET  a.ACTION_RMS = b.ACTION
	FROM "osr.scv.foundation.db.data::MatchResults.MatchDelta" a , :lt_exisitng_RMSPerson_records b
	WHERE a.MATCH_ROW_ID = b.MATCH_ROW_ID;																	
	
	--	o_return_code := 'Success' ;
	--	o_message := 'Entites moved successfully';
END;