PROCEDURE "osr.scv.foundation.db.Procedures::SP_MatchRecordHash" ( )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA 
   AS
BEGIN
   /*************************************
       Generate match row hash 
   *************************************/
   
   TRUNCATE TABLE "osr.scv.foundation.db.data::HashResults.MatchResultsHash";
   
   lt_matchresults_hashRMS =
						 SELECT 
		            	--ROW_NUMBER() OVER (ORDER BY a.ENTITY_ID ASC) as ROW_COUNT,
		            	--a.GROUP_ID,
					--	a.ENTITY_ID,PERSON_RMS, PERSON_TMR,	ADDR_RMS, ADDR_TMR,	TEL_RMS,FAX_RMS,TEL_TMR, SMS_TMR, EMAIL_TMR,a.SOURCE_SYSTEM,
		            	a.ENTITY_ID, a."Match_ROW_ID" as MATCH_ROW ,
						
						HASH_SHA256(TO_BINARY(TO_VARCHAR(CASE WHEN PERSON_RMS IS NULL THEN '' ELSE PERSON_RMS END)),
									TO_BINARY(TO_VARCHAR(CASE WHEN ADDR_RMS IS NULL THEN '' ELSE ADDR_RMS END)),
									TO_BINARY(TO_VARCHAR(CASE WHEN TEL_RMS IS NULL THEN '' ELSE TEL_RMS END)),
									TO_BINARY(TO_VARCHAR(CASE WHEN FAX_RMS IS NULL THEN '' ELSE FAX_RMS END))
						) AS HASH_MATCH
						
		            	

		                FROM   "osr.scv.foundation.db.data::MatchResults.MatchResults" AS a 
		                -- Add original fields
		                --BUT000-RMS
		                LEFT OUTER JOIN ( 
		                			      SELECT BIRTHDT , NAME_FIRST, NAMEMIDDLE, NAME_LAST, DEATHDT, "Z_RUN_SEQ_ID", "PARTNER",
		                			      (NAME_FIRST || NAMEMIDDLE || NAME_LAST || (CASE WHEN BIRTHDT = ' ' THEN TO_DATE('19990101', 'YYYYMMDD') ELSE TO_DATE(BIRTHDT, 'YYYYMMDD') END)) as PERSON_RMS
		                			      FROM "osr.scv.foundation.db.synonyms::BUT000"
		                					
		                				) as prms
		                ON a."Cleanse_ROW_ID_BUT" = prms."Z_RUN_SEQ_ID" AND a."SYSTEM_ID" = prms."PARTNER"
		                --ADRC-RMS
		                LEFT OUTER JOIN (
		                				 SELECT TEL_NUMBER, TEL_EXTENS, ADDRNUMBER, COUNTRY as COUNTRY_ORIG_ADRC, REGION AS REGION_ORIG_ADRC, CITY1 AS CITY_ORIG_ADRC, STREET AS STREET_ORIG_ADRC, HOUSE_NUM1 AS STREET_NUMBER_ORIG_ADRC, POST_CODE1 as POSTCODE_ORIG_ADRC, "Z_RUN_SEQ_ID",
    									 (CITY1 || POST_CODE1 || STREET || HOUSE_NUM1 || COUNTRY || REGION || PERS_ADDR || MC_CITY1 || MC_STREET) as ADDR_RMS

		                				 FROM "osr.scv.foundation.db.synonyms::ADRC"
		                				) as e1
		                ON  a."Cleanse_ROW_ID_ADRC" = e1."Z_RUN_SEQ_ID"
		                --Phone number-RMS
		                LEFT OUTER JOIN(
		                				SELECT TEL_NUMBER, TEL_EXTENS, "Z_RUN_SEQ_ID",
		                				(TEL_NUMBER || TEL_EXTENS) as TEL_RMS
		                				FROM "osr.scv.foundation.db.synonyms::ADRC"
		                				WHERE ( LENGTH(TEL_NUMBER) > 0)
		                				) e2
		                ON a."Cleanse_ROW_ID_ADRC" = e2."Z_RUN_SEQ_ID"
		                --Fax number-RMS
		                LEFT OUTER JOIN(
		                				SELECT FAX_NUMBER, FAX_EXTENS, "Z_RUN_SEQ_ID",
		                				(FAX_NUMBER || FAX_EXTENS) as FAX_RMS
		                				FROM "osr.scv.foundation.db.synonyms::ADRC"
		                				WHERE ( LENGTH(FAX_NUMBER) > 0)
		                				) e3
		                ON a."Cleanse_ROW_ID_ADRC" = e3."Z_RUN_SEQ_ID" 
		                WHERE a.SOURCE_SYSTEM = 'RMS'
		                
		                ORDER  BY ENTITY_ID ASC
		                		  --SOURCE_SYSTEM ASC, 
		                          --SYSTEM_ID DESC,
		                          --MATCH_ROW ASC
					    ;

	lt_matchresults_hashTMR =
						
					SELECT 
					--	a.ENTITY_ID, PERSON_TMR, ADDR_TMR,TEL_TMR, SMS_TMR, EMAIL_TMR,
		            	a.ENTITY_ID, a."Match_ROW_ID" as MATCH_ROW ,

						HASH_SHA256(TO_BINARY(TO_VARCHAR(CASE WHEN PERSON_TMR IS NULL THEN '' ELSE PERSON_TMR END)),
									TO_BINARY(TO_VARCHAR(CASE WHEN ADDR_TMR IS NULL THEN '' ELSE ADDR_TMR END)),
									TO_BINARY(TO_VARCHAR(CASE WHEN TEL_TMR IS NULL THEN '' ELSE TEL_TMR END)),
									TO_BINARY(TO_VARCHAR(CASE WHEN SMS_TMR IS NULL THEN '' ELSE SMS_TMR END)),
									TO_BINARY(TO_VARCHAR(CASE WHEN EMAIL_TMR IS NULL THEN '' ELSE EMAIL_TMR END))
							
						) AS HASH_MATCH
						
		            	

		                FROM   "osr.scv.foundation.db.data::MatchResults.MatchResults" AS a 
		                -- Add original fields
		                --Name and Address-TMR
		                LEFT OUTER JOIN ( 
		                			      SELECT DATE_OF_BIRTH, FIRST_NAME, MIDDLE_NAME, FAMILY_ORG_NAME, COUNTRY, STATE, SUBURB, STREET_NAME, STREET_NO, POSTCODE,  "Z_RUN_SEQ_ID", "CUSTOMER_REF",
		                			      (FIRST_NAME || MIDDLE_NAME || FAMILY_ORG_NAME || DATE_OF_BIRTH) as PERSON_TMR,
		                			      (FLOOR || UNIT || BUILDING_NAME || STREET_NO || STREET_NAME || STREET_TYPE || STREET_SUFFIX || SUBURB || POSTCODE || STATE || COUNTRY) as ADDR_TMR
		                			      FROM "osr.scv.foundation.db.synonyms::TMR_CustMain"
		                				) as ptmr
		                ON a."Cleanse_ROW_ID_TMR" = ptmr."Z_RUN_SEQ_ID" AND a."SYSTEM_ID" = ptmr."CUSTOMER_REF" 
				
		                --Phone number-TMR
		                LEFT OUTER JOIN(
		                				SELECT CONTACT_PHONE_EFFECT_DT,CONTACT_PHONE_NO,"CUSTOMER_REF","Z_RUN_SEQ_ID",
		                				(CONTACT_PHONE_EFFECT_DT || CONTACT_PHONE_NO) as TEL_TMR
		                				FROM "osr.scv.foundation.db.synonyms::TMR_CustMain"
		                				 WHERE LENGTH (CONTACT_PHONE_NO) > 0
		                				GROUP BY CONTACT_PHONE_EFFECT_DT,CONTACT_PHONE_NO,"CUSTOMER_REF", "Z_RUN_SEQ_ID"
		                				) as f1
										ON  a."SYSTEM_ID" = f1."CUSTOMER_REF" AND a."Cleanse_ROW_ID_TMR" = f1."Z_RUN_SEQ_ID"

		                --SMS number-TMR
		                LEFT OUTER JOIN(
		                				SELECT 
											c.CUSTOMER_REF,
											c.LAST_UPDATED,
											c.SMS_CONTACT_NUMBER,
											c.Z_RUN_SEQ_ID,
											(c.LAST_UPDATED || c.SMS_CONTACT_NUMBER) as SMS_TMR
											FROM "osr.scv.foundation.db.synonyms::TMR_CustContact" c
												INNER JOIN 
													(SELECT 
											    	CUSTOMER_REF,
											        MAX(Z_RUN_SEQ_ID) as Z_RUN_SEQ_ID
											        FROM "osr.scv.foundation.db.synonyms::TMR_CustContact"
											        GROUP BY CUSTOMER_REF) d 
											        ON d.CUSTOMER_REF = c.CUSTOMER_REF AND d.Z_RUN_SEQ_ID = c.Z_RUN_SEQ_ID
											GROUP BY c.CUSTOMER_REF, c.LAST_UPDATED, c.SMS_CONTACT_NUMBER, c.Z_RUN_SEQ_ID
		                				) as f2
										ON  a."SYSTEM_ID" = f2."CUSTOMER_REF" 
		                --Email address-TMR
		                LEFT OUTER JOIN(
		                					SELECT 
											c.CUSTOMER_REF,
											c.LAST_UPDATED,
											c.EMAIL_ADDRESS,
											c.Z_RUN_SEQ_ID,
											(c.LAST_UPDATED || c.EMAIL_ADDRESS) as EMAIL_TMR
											FROM "osr.scv.foundation.db.synonyms::TMR_CustContact" c
												INNER JOIN 
													(SELECT 
											    	CUSTOMER_REF,
											        MAX(Z_RUN_SEQ_ID) as Z_RUN_SEQ_ID
											        FROM "osr.scv.foundation.db.synonyms::TMR_CustContact"
											        GROUP BY CUSTOMER_REF) d 
											        ON d.CUSTOMER_REF = c.CUSTOMER_REF AND d.Z_RUN_SEQ_ID = c.Z_RUN_SEQ_ID
											GROUP BY c.CUSTOMER_REF, c.LAST_UPDATED, c.EMAIL_ADDRESS, c.Z_RUN_SEQ_ID
		                				) as f3
										ON  a."SYSTEM_ID" = f3."CUSTOMER_REF" 
										
						WHERE a.SOURCE_SYSTEM = 'TMR'
		                GROUP BY a.ENTITY_ID, a."Match_ROW_ID", PERSON_TMR, ADDR_TMR,TEL_TMR, SMS_TMR, EMAIL_TMR
		                ORDER  BY ENTITY_ID ASC
		                ;
	
	
	
	lt_matchresults_hash =	SELECT * FROM :lt_matchresults_hashRMS
								UNION ALL
							SELECT * FROM :lt_matchresults_hashTMR;				    
	
	INSERT INTO "osr.scv.foundation.db.data::HashResults.MatchResultsHash"	(SELECT * FROM :lt_matchresults_hash);			    
					    

END;





