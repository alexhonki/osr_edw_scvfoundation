/*
	Move entities from match results table to shadow table
	
		This code will move all match result entities to a match results shadow table. By default, all match groups with the following promotion strategy will be moved:
			- Identical (Auto-Promotion)
			- Business Rule Accept (Promote)
			- Accept (Accept, Split, Reject)	
		
		The strategy Identical and Business Rule Accept is automatically applied when populating the match review UI. For strategy Accept, the business user has to review
		a match group and accept it.
		
		For every entity, a changelog will be written to table osr.scv.foundation.db.data::MatchResultsReview.Assessments.
						
		SAP Australia, September 2017	
*/
PROCEDURE "osr.scv.foundation.db.Procedures::SP_MoveEntityToShadowTable" (
	
	-- IN i_entities		TABLE (ENTITY_ID NVARCHAR(10)),
	IN i_user			NVARCHAR(20),
	OUT i_timestamp		TIMESTAMP
	-- OUT o_return_code	NVARCHAR(10),
	-- OUT o_message		NVARCHAR(200)
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   AS
BEGIN

	-- Declare exception hander for all SQL exceptions.
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		-- o_return_code :=  'ERROR';
		-- o_message:=  'ERROR: ' || ::SQL_ERROR_CODE || ' ' || ::SQL_ERROR_MESSAGE;
	END;

	TRUNCATE TABLE "osr.scv.foundation.db.data::MatchResults.MatchResultsShadow";
	TRUNCATE TABLE "osr.scv.foundation.db.data::MatchResultsReview.Promotions";

	-- Move match groups with strategies Identical, System Accept and Promote into the shadow table
	lt_entities = 
		SELECT ENTITY_ID, STRATEGY_RESOLVED, ACTION_RESOLVED 
		FROM "osr.scv.foundation.db.data::MatchResultsReview.Review"
		WHERE STRATEGY_RESOLVED IN ('Identical', 'System Accept', 'Promote', 'System Promote');
	
	lt_single_RMS_records = 		
		SELECT DISTINCT ENTITY_ID, 'System Accept' AS STRATEGY_RESOLVED, 'Auto-Promotion' AS ACTION_RESOLVED 
		FROM "osr.scv.foundation.db.data::MatchResults.MatchResults" mr
		LEFT OUTER JOIN "osr.scv.foundation.db.synonyms::BUT000"  sb
		on mr."Cleanse_ROW_ID_BUT" = sb.Z_RUN_SEQ_ID
		WHERE mr."ENTITY_ID" LIKE '0-%' and mr.SOURCE_SYSTEM = 'RMS' AND LENGTH(sb.BIRTHDT) > 7;	   	
		
	lt_entities_total =	SELECT * FROM :lt_entities
						UNION ALL
						SELECT * FROM :lt_single_RMS_records;	

	lt_update = 
		(
			SELECT m.* FROM "osr.scv.foundation.db.data::MatchResults.MatchResults" m
			INNER JOIN (
						SELECT DISTINCT ENTITY_ID FROM :lt_entities_total
					   ) r
			ON m.ENTITY_ID = r.ENTITY_ID
			-- Only move the entities that have changed
			INNER JOIN (
						SELECT DISTINCT * FROM "osr.scv.foundation.db.functions::MatchDelta" ()
					   ) d
			ON m."Match_ROW_ID" = d.MATCH_ROW_ID
			WHERE d.ACTION = 'New'
		);
	
	INSERT INTO "osr.scv.foundation.db.data::MatchResults.MatchResultsShadow" (SELECT * FROM :lt_update);
	
	-- Delete from match results table what has been moved into shadow table
--	 DELETE FROM "osr.scv.foundation.db.data::MatchResults.MatchResults" WHERE ENTITY_ID IN (SELECT ENTITY_ID FROM :lt_update);
	   
	-- Delete from main UI review table
--	DELETE FROM "osr.scv.foundation.db.data::MatchResultsReview.Review" WHERE ENTITY_ID IN (SELECT ENTITY_ID FROM :lt_update);
	
	-- Update statistics
	INSERT INTO  "osr.scv.foundation.db.data::MatchResultsReview.Promotions" 
	(
		SELECT e.ENTITY_ID, :i_timestamp, :i_user, e.ACTION_RESOLVED as ACTION, e.STRATEGY_RESOLVED AS STRATEGY  
		FROM :lt_entities_total e
		INNER JOIN (
		SELECT DISTINCT ENTITY_ID FROM "osr.scv.foundation.db.data::MatchResults.MatchResultsShadow"
		) d
		ON e.ENTITY_ID = d.ENTITY_ID
	);
	
	-- o_return_code := 'SUCCESS';
	-- o_message := 'Entites moved successfully';
	--END IF;

END