PROCEDURE "osr.scv.foundation.db.Procedures::SP_BuildScvSearchTable" ( )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   AS
BEGIN
	/*************************************
	Fill the index table for fuzzy text search
	*************************************/
   
	-- Replace with delta mechanism instead of deleting whole table
	TRUNCATE TABLE "osr.scv.foundation.db.data::SCVFoundation.Search";
	
	-- Create lookup table
	lt_addr_type_lookup = SELECT STD_ADDR_PRIM_TYPE, STRING_AGG(LOWER_TYPE, ' ') FROM 
						  (
							SELECT STD_ADDR_PRIM_TYPE, LOWER(ADDR_TYPE) AS LOWER_TYPE FROM "osr.scv.foundation.db.data::SCVPrimType.AddrType"
							GROUP BY STD_ADDR_PRIM_TYPE, LOWER(ADDR_TYPE)
						   ) 
						   GROUP BY STD_ADDR_PRIM_TYPE;
	
	-- 1. Add RMS data
	INSERT INTO "osr.scv.foundation.db.data::SCVFoundation.Search" 
	(
		SELECT DISTINCT * FROM ( 
					SELECT a.SCV_ID, a.SOURCE, a.SOURCE_ID, 
					-- SEARCH_STRING
					(a.FIRST_NAME || '|' || a.MIDDLE_NAME || '|' || a.LAST_NAME || '|' || a.BIRTH_DATE || '|' ||  b.CITY1
					|| '|' || b.POST_CODE1 || '|' || b.STREET || '|' || b.HOUSE_NUM1 || '|' || b.REGION || '|' || b.COUNTRY
					) AS SEARCH_STRING,
					-- SEARCH_STRING_CLEANSED
					(a.STD_PERSON_GN || '|' || a.STD_PERSON_GN2 || '|' || a.STD_PERSON_FN || '|' || a.BIRTH_DATE || '|' ||  b.STD_ADDR_LOCALITY
					|| '|' || b.STD_ADDR_POSTCODE1 || '|' || b.STD_ADDR_PRIM_NAME || '|' || b.STD_ADDR_PRIM_TYPE || '|' || b.STD_ADDR_PRIM_NUMBER || '|' || b.STD_ADDR_REGION || '|' || b.STD_ADDR_COUNTRY_NAME
					) AS SEARCH_STRING_CLEANSED,
					b.CHECKSUM, b.STD_CHECKSUM,
					-- SEARCH_STRING_LT12
					(b.STREET || '|' || b.CITY1 || '|' || b.POST_CODE1
					) AS SEARCH_STRING_LT12,
					-- SEARCH_STRING_CLEANSED_LT12 
					--No Match Found in Cleanse Lookup Table--
					CASE WHEN c.ADDR_TYPE_ADD is NULL or b.STD_ADDR_PRIM_NAME = ''   THEN (b.STD_ADDR_PRIM_NAME_FULL || '|' || b.STD_ADDR_LOCALITY || '|' || b.STD_ADDR_POSTCODE1)
					--Match Found in Cleanse Lookup Table but it is already part of STD_ADDR_PRIM_NAME_FULL--
					WHEN LOCATE(LOWER(c.ADDR_TYPE_ADD),LOWER(b.STD_ADDR_PRIM_TYPE)) > 0 THEN (b.STD_ADDR_PRIM_NAME || ' ' || LOWER(REPLACE(c.ADDR_TYPE_ADD,b.STD_ADDR_PRIM_TYPE,' ')) || '|' || b.STD_ADDR_LOCALITY || '|' || b.STD_ADDR_POSTCODE1 )
					--Match Found in Cleanse Lookup Table but it is not not part of STD_ADDR_PRIM_NAME_FULL--
					ELSE (b.STD_ADDR_PRIM_NAME || ' ' || LOWER(b.STD_ADDR_PRIM_TYPE) || ' ' || LOWER(c.ADDR_TYPE_ADD) || '|' || b.STD_ADDR_LOCALITY || '|' || b.STD_ADDR_POSTCODE1) END  
					AS "SEARCH_STRING_CLEANSED_LT12",'NULL','NULL','NULL','NULL'
					FROM "osr.scv.foundation.db.data::SCVFoundation.PersonRms" a
					INNER JOIN
					"osr.scv.foundation.db.data::SCVFoundation.AddressRms" b
					ON a.SCV_ID = b.SCV_ID AND a.SOURCE = b.SOURCE and a.SOURCE_ID = b.SOURCE_ID
					LEFT OUTER JOIN (
									SELECT STD_ADDR_PRIM_TYPE, STRING_AGG(LOWER_TYPE, ' ') AS ADDR_TYPE_ADD FROM 
									(
										SELECT STD_ADDR_PRIM_TYPE, LOWER(ADDR_TYPE) AS LOWER_TYPE 
										FROM "osr.scv.foundation.db.data::SCVPrimType.AddrType"
										GROUP BY STD_ADDR_PRIM_TYPE, LOWER(ADDR_TYPE)
									) GROUP BY STD_ADDR_PRIM_TYPE) c
					ON b.STD_ADDR_PRIM_TYPE = c.STD_ADDR_PRIM_TYPE
			   ) 
			   WHERE SCV_ID IN (SELECT SCV_ID FROM "osr.scv.foundation.db.data::SCVFoundation.Master" WHERE IS_HIDDEN != 'X')
	);
	
	-- 2. Add TMR data
	INSERT INTO "osr.scv.foundation.db.data::SCVFoundation.Search" 
	(
		SELECT DISTINCT * FROM (
			SELECT a.SCV_ID, a.SOURCE, a.SOURCE_ID, 
			-- SEARCH_STRING
			(a.FIRST_NAME || '|' || a.MIDDLE_NAME || '|' || a.LAST_NAME || '|' || a.BIRTH_DATE || '|' ||  b.SUBURB
			|| '|' || b.POSTCODE || '|' || b.STREET_NAME || '|' || b.STREET_NO || '|' || b.STATE || '|' || b.COUNTRY
			) AS SEARCH_STRING,
			-- SEARCH_STRING_CLEANSED
			(a.STD_PERSON_GN || '|' || a.STD_PERSON_GN2 || '|' || a.STD_PERSON_FN || '|' || a.BIRTH_DATE || '|' ||  b.STD_ADDR_LOCALITY
			|| '|' || b.STD_ADDR_POSTCODE1 || '|' || b.STD_ADDR_PRIM_NAME || '|' || b.STD_ADDR_PRIM_TYPE || '|' || b.STD_ADDR_PRIM_NUMBER || '|' || b.STD_ADDR_REGION || '|' || STD_ADDR_COUNTRY_NAME
			) AS SEARCH_STRING_CLEANSED,
			b.CHECKSUM, b.STD_CHECKSUM,
			-- SEARCH_STRING_LT12
			(b.STREET_NAME || '|' || b.SUBURB || '|' || b.POSTCODE
			) AS SEARCH_STRING_LT12,
								-- SEARCH_STRING_CLEANSED_LT12 
					--No Match Found in Cleanse Lookup Table--
					CASE WHEN c.ADDR_TYPE_ADD is NULL or b.STD_ADDR_PRIM_NAME = '' THEN (b.STD_ADDR_PRIM_NAME_FULL || '|' || b.STD_ADDR_LOCALITY || '|' || b.STD_ADDR_POSTCODE1)
					--Match Found in Cleanse Lookup Table but it is already part of STD_ADDR_PRIM_NAME_FULL--
					WHEN LOCATE(LOWER(c.ADDR_TYPE_ADD),LOWER(b.STD_ADDR_PRIM_TYPE)) > 0 THEN (b.STD_ADDR_PRIM_NAME  || ' ' || LOWER(REPLACE(c.ADDR_TYPE_ADD,b.STD_ADDR_PRIM_TYPE,' ')) || '|' || b.STD_ADDR_LOCALITY || '|' || b.STD_ADDR_POSTCODE1)
					--Match Found in Cleanse Lookup Table but it is not not part of STD_ADDR_PRIM_NAME_FULL--
					ELSE (b.STD_ADDR_PRIM_NAME || ' ' || LOWER(b.STD_ADDR_PRIM_TYPE) || ' ' || LOWER(c.ADDR_TYPE_ADD) || '|' || b.STD_ADDR_LOCALITY || '|' || b.STD_ADDR_POSTCODE1) END  
					AS "SEARCH_STRING_CLEANSED_LT12",'NULL','NULL','NULL','NULL'
			FROM "osr.scv.foundation.db.data::SCVFoundation.PersonTmr" a
			INNER JOIN
			"osr.scv.foundation.db.data::SCVFoundation.AddressTmr" b
			ON a.SCV_ID = b.SCV_ID AND a.SOURCE = b.SOURCE and a.SOURCE_ID = b.SOURCE_ID
			LEFT OUTER JOIN (
							SELECT STD_ADDR_PRIM_TYPE, STRING_AGG(LOWER_TYPE, ' ') AS ADDR_TYPE_ADD FROM 
							(
								SELECT STD_ADDR_PRIM_TYPE, LOWER(ADDR_TYPE) AS LOWER_TYPE 
								FROM "osr.scv.foundation.db.data::SCVPrimType.AddrType"
								GROUP BY STD_ADDR_PRIM_TYPE, LOWER(ADDR_TYPE)
							) GROUP BY STD_ADDR_PRIM_TYPE) c
					ON b.STD_ADDR_PRIM_TYPE = c.STD_ADDR_PRIM_TYPE
		) WHERE SCV_ID IN (SELECT SCV_ID FROM "osr.scv.foundation.db.data::SCVFoundation.Master" WHERE IS_HIDDEN != 'X')
	);
   
END