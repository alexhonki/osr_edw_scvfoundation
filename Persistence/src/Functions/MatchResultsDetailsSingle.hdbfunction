FUNCTION "osr.scv.foundation.db.Functions::MatchResultsDetailsSingle" ( IN i_match_row NVARCHAR(20) )
       RETURNS TABLE (	
    					POLICY_NAME NVARCHAR(256),
    					SCORE Integer,
    					GROUP_ID Integer,
        				ENTITY_ID VARCHAR(20),
        				SOURCE_SYSTEM NVARCHAR(10),
        				SYSTEM_ID NVARCHAR(10),
        				FIRST_NAME NVARCHAR(50),
        				MIDDLE_NAME NVARCHAR(50),
        				LAST_NAME NVARCHAR(80),
					    BIRTHDT VARCHAR(8),
					    ADDRNUMBER NVARCHAR(10), 
        				ADDRESS_COUNTRY NVARCHAR(100),
					    ADDRESS_LOCALITY NVARCHAR(100),
					    ADDRESS_REGION NVARCHAR(64),
					    ADDRESS_POSTCODE NVARCHAR(20),
					    ADDRESS_PRIM_NAME NVARCHAR(100),
					    ADDRESS_PRIM_NUMBER NVARCHAR(40),
        				MATCH_ROW INTEGER

        			  )
       SQL SECURITY INVOKER AS 
BEGIN 
/*****************************  
       Write your function logic 
 *****************************/ 

	DECLARE l_match_row INTEGER;

				l_match_row = TO_INT(:i_match_row);
				
				-- Get matching rows
				lt_related_rows = SELECT RELATED_ROW_ID, POLICY_NAME, SCORE FROM "osr.scv.foundation.db.data::MatchResults.MatchResults" AS a
				LEFT OUTER JOIN (SELECT * 
		                                 FROM "osr.scv.foundation.db.data::MatchResults.MatchTracing" 
		                                ) AS b
		                ON a."Match_ROW_ID" = b.ROW_ID
			    WHERE a."Match_ROW_ID" = :l_match_row;

				-- Get master data for matching rows
				lt_target_match_rows =  
				
						SELECT b.POLICY_NAME, b.SCORE, a.* FROM (
						
						SELECT * FROM (
						
						SELECT 
		            	a.GROUP_ID,
						a.ENTITY_ID,
		            	a.SOURCE_SYSTEM,
		            	a.SYSTEM_ID,
		            	COALESCE(e.FNAME_ORIG_BUT, f.FNAME_ORIG_TMR) AS FIRST_NAME,
		            	COALESCE(e.MNAME_ORIG_BUT, f.MNAME_ORIG_TMR) AS MIDDLE_NAME,
		            	COALESCE(e.LNAME_ORIG_BUT, f.LNAME_ORIG_TMR) AS LAST_NAME,
		            	COALESCE(e.BIRTHDT_ORIG_BUT, f.BIRTHDT_ORIG_TMR) AS BIRTHDT,
		            	e1.ADDRNUMBER,
		            	COALESCE(e1.COUNTRY_ORIG_ADRC, f.COUNTRY_ORIG_TMR) AS ADDRESS_COUNTRY,
						COALESCE(e1.CITY_ORIG_ADRC, f.CITY_ORIG_TMR) AS ADDRESS_LOCALITY,
						COALESCE(e1.REGION_ORIG_ADRC, f.REGION_ORIG_TMR) AS ADDRESS_REGION,
						COALESCE(e1.POSTCODE_ORIG_ADRC, f.POSTCODE_ORIG_TMR) AS ADDRESS_POSTCODE,
		            	COALESCE(e1.STREET_ORIG_ADRC, f.STREET_ORIG_TMR) AS ADDRESS_PRIM_NAME,
		            	COALESCE(e1.STREET_NUMBER_ORIG_ADRC, f.STREET_NUMBER_ORIG_TMR) AS ADDRESS_PRIM_NUMBER,
		            	a."Match_ROW_ID" as MATCH_ROW
		                      
		                FROM   "osr.scv.foundation.db.data::MatchResults.MatchResults" AS a 
		                -- Add original fields
		                --- BUT000
		                LEFT OUTER JOIN ( 
		                			      SELECT BIRTHDT AS BIRTHDT_ORIG_BUT, NAME_FIRST AS FNAME_ORIG_BUT, NAMEMIDDLE AS MNAME_ORIG_BUT, NAME_LAST AS LNAME_ORIG_BUT, "Z_RUN_SEQ_ID", "PARTNER" FROM "osr.scv.foundation.db.synonyms::BUT000"
		                					
		                				) as e
		                ON a."Cleanse_ROW_ID_BUT" = e."Z_RUN_SEQ_ID" AND a."SYSTEM_ID" = e."PARTNER" and a."SOURCE_SYSTEM" = 'RMS'
		                -- ADRC
		                LEFT OUTER JOIN (
		                				 SELECT ADDRNUMBER, COUNTRY as COUNTRY_ORIG_ADRC, REGION AS REGION_ORIG_ADRC, CITY1 AS CITY_ORIG_ADRC, STREET AS STREET_ORIG_ADRC, HOUSE_NUM1 AS STREET_NUMBER_ORIG_ADRC, POST_CODE1 as POSTCODE_ORIG_ADRC, "Z_RUN_SEQ_ID" 
		                				 FROM "osr.scv.foundation.db.synonyms::ADRC"
		                				) as e1
		                ON a."Cleanse_ROW_ID_ADRC" = e1."Z_RUN_SEQ_ID" AND a."SOURCE_SYSTEM" = 'RMS'
		                -- TMR
		                LEFT OUTER JOIN ( 
		                			      SELECT DATE_OF_BIRTH AS BIRTHDT_ORIG_TMR, FIRST_NAME AS FNAME_ORIG_TMR, MIDDLE_NAME AS MNAME_ORIG_TMR, FAMILY_ORG_NAME AS LNAME_ORIG_TMR, COUNTRY as COUNTRY_ORIG_TMR, STATE AS REGION_ORIG_TMR, SUBURB AS CITY_ORIG_TMR, STREET_NAME AS STREET_ORIG_TMR, STREET_NO AS STREET_NUMBER_ORIG_TMR, POSTCODE as POSTCODE_ORIG_TMR, "Z_RUN_SEQ_ID", "CUSTOMER_REF" FROM "osr.scv.foundation.db.synonyms::TMR_CustMain"
		                					
		                				) as f
		                ON a."Cleanse_ROW_ID_TMR" = f."Z_RUN_SEQ_ID" AND a."SYSTEM_ID" = f."CUSTOMER_REF" AND a."SOURCE_SYSTEM" = 'TMR'			
		                -- Add match tracing statistics
		                LEFT OUTER JOIN (SELECT * 
		                                 FROM    "osr.scv.foundation.db.data::MatchResults.MatchTracing"
		                                ) AS b
		                ON a."Match_ROW_ID" = b.ROW_ID
					
						WHERE a."Match_ROW_ID" IN (SELECT RELATED_ROW_ID FROM :lt_related_rows) 
		                ORDER  BY SOURCE_SYSTEM ASC, 
		                          SYSTEM_ID DESC,
		                          b.SCORE ASC,
		                          MATCH_ROW ASC
					    
					    
					    ) a
					   
					    GROUP BY
					    GROUP_ID,
						ENTITY_ID,
		            	SOURCE_SYSTEM,
		            	SYSTEM_ID,
		            	FIRST_NAME,
		            	MIDDLE_NAME,
		            	LAST_NAME,
		            	BIRTHDT,
		            	ADDRNUMBER,
		            	ADDRESS_COUNTRY,
						ADDRESS_LOCALITY,
						ADDRESS_REGION,
						ADDRESS_POSTCODE,
		            	ADDRESS_PRIM_NAME,
		            	ADDRESS_PRIM_NUMBER,
		            	MATCH_ROW
		            	
		            	) a
					    
					    INNER JOIN :lt_related_rows b
					    ON a.MATCH_ROW = b.RELATED_ROW_ID;
					    
					   
						RETURN SELECT * FROM :lt_target_match_rows;
					    
END;
